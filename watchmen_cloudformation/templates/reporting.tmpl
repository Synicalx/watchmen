# Copyright 2017 Insurance Australia Group Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
AWSTemplateFormatVersion: "2010-09-09"
Description: Nested AWS stack for Reporting resources used by Watchmen.

Parameters:

  Prefix: # Passed from parent stack
    Description: Environment prefix.
    Type: String
    AllowedPattern: '[a-z0-9-_]*'
    ConstraintDescription: "Must be lowercase.Hyphen and numbers allowed.No spaces"

  LambdaS3Bucket: # Passed from parent stack
    Description: The S3 bucket which stores the lambda functions
    Type: String

  ReportS3Bucket: # Passed from parent stack
    Type: String

  LambdaExecutionRole: # Passed from parent stack
    Description: Lambda execution role
    Type: String

  RetentionInDays: # Using default
    Description: The number of days log events are kept in CloudWatch Logs.
    Type: Number
    ConstraintDescription: Must be a valid retention in days Value
    Default: 30

Resources:

  GenerateComplianceReport: # Lambda function to generate compliance report for Citizen accounts
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Join [ "", [ !Ref Prefix , "GenerateComplianceReport" ] ]
      Description: Lambda function to generate compliance report for Citizen accounts
      Handler: generate_compliance_report.lambda_handler
      Timeout: 180
      Role: !Ref LambdaExecutionRole
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: "{{generate_compliance_report}}"
      Runtime: python2.7

  GenerateComplianceLogGroup: # Log group for Lambda function
    Type: "AWS::Logs::LogGroup"
    DependsOn: GenerateComplianceReport
    Properties:
      LogGroupName: !Join [ "", [ "/aws/lambda/", !Ref Prefix , "GenerateComplianceReport"] ]
      RetentionInDays: !Ref RetentionInDays

##############################################################################################
# CloudWatch Event Rule for each account to execute GenerateComplianceReport Lambda function #
##############################################################################################
{{event_rule}}