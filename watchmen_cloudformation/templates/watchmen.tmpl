# Copyright 2017 Insurance Australia Group Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation stack for Watchmen.

Parameters:

  Prefix:
    Description: Environment prefix.
    Type: String
    AllowedPattern: '[a-z0-9-_]*'
    ConstraintDescription: "Must be lowercase.Hyphen and numbers allowed.No spaces"

  CloudFormationS3Bucket:
    Description: The S3 bucket which stores the CloudFormation templates for the nested stacks.
    Type: String

  DeployElasticSearch:
    Description: Conditional parameter to control if ElasticSearch stack should be run.
    Type: String
    Default: false

  ElasticSearchInstanceCount:
    Description: Number of EC2 Instance nodes to run for ElasticSearch cluster.
    Type: Number
    ConstraintDescription: Must be a valid Instance Count
    Default: 2

  DeployMonitoring:
    Description: Conditional parameter to control if Monitoring stack should be run.
    Type: String
    Default: false

  DeployReporting:
    Description: Conditional parameter to control if Reporting stack should be run.
    Type: String
    Default: false

  DeployCitizenUpdate:
    Description: Conditional parameter to control if CitizenUpdate stack should be run.
    Type: String
    Default: false

  LambdaS3Bucket:
    Description: The S3 bucket which stores all the lambda functions
    Type: String

  DistributionS3BucketName:
    Description: The S3 bucket which stores the citizen template for distribution to the citizens
    Type: String

  DistributionS3BucketAccess:
    Description: The IP address's that can access the distribution s3 bucket
    Type: String
    Default: "{{external_cidr}}" # Company's External IP Range to allow access to S3 bucket rather than public access

  ReportS3Bucket:
    Type: String

  SlackChannel:
    Description: Slack channel name to send notifications.
    Type: String
    Default: "{{notifications_slack}}"

  SlackChannelHookUrl:
    Description: Slack Channel Web Hook Url
    Type: String
    Default: "{{slack_channel_hook_url}}"

  EmailNotification:
    Description: Email to send notifications.
    Type: String
    Default: {{notifications_email}}

Conditions:

#####################################################################
# Conditions/Tests that determine if supporting stacks are deployed #
#####################################################################

  ShouldDeployElasticSearch: !Equals [ !Ref DeployElasticSearch, true ]
  ShouldDeployMonitoring: !Equals [ !Ref DeployMonitoring, true ]
  ShouldDeployReporting: !Equals [ !Ref DeployReporting, true ]
  ShouldDeployCitizen: !Equals [ !Ref DeployCitizenUpdate, true ]

Resources:

###############
# Main stacks #
###############

  RolesStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Parameters:
        Prefix: !Ref Prefix
      TemplateURL: !Sub "https://s3.amazonaws.com/${CloudFormationS3Bucket}/roles.yml"

#############################
# Verification rules stacks #
#############################
{{verification_rules}}
################################################
# Supporting stacks that are optional to deploy #
#################################################

  ElasticSearchClusterStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: ShouldDeployElasticSearch
    Properties:
      Parameters:
        ElasticSearchInstanceCount: !Ref ElasticSearchInstanceCount
        LambdaS3Bucket: !Ref LambdaS3Bucket
        Prefix: !Ref Prefix
      TemplateURL: !Sub "https://s3.amazonaws.com/${CloudFormationS3Bucket}/es-cluster.yml"

  MonitoringStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: ShouldDeployMonitoring
    Properties:
      Parameters:
        EmailNotification: !Ref EmailNotification
        Prefix: !Ref Prefix
        SlackChannel: !Ref SlackChannel
        SlackChannelHookUrl: !Ref SlackChannelHookUrl
      TemplateURL: !Sub "https://s3.amazonaws.com/${CloudFormationS3Bucket}/monitoring.yml"

  ReportingStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: ShouldDeployReporting
    DependsOn: RolesStack
    Properties:
      Parameters:
        LambdaExecutionRole: !GetAtt RolesStack.Outputs.LambdaExecutionRole
        LambdaS3Bucket: !Ref LambdaS3Bucket
        Prefix: !Ref Prefix
        ReportS3Bucket: !Ref ReportS3Bucket
      TemplateURL: !Sub "https://s3.amazonaws.com/${CloudFormationS3Bucket}/reporting.yml"

  CitizenUpdateStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: ShouldDeployCitizen
    DependsOn: RolesStack
    Properties:
      Parameters:
        DeployElasticSearch: !Ref DeployElasticSearch
        DistributionS3BucketName: !Ref DistributionS3BucketName
        DistributionS3BucketAccess: !Ref DistributionS3BucketAccess
        LambdaExecutionRole: !GetAtt RolesStack.Outputs.LambdaExecutionRole
        LambdaS3Bucket: !Ref LambdaS3Bucket
        Prefix: !Ref Prefix
      TemplateURL: !Sub "https://s3.amazonaws.com/${CloudFormationS3Bucket}/citizen-update.yml"

  ElasticSearchSubscriptions:
    Type: "AWS::CloudFormation::Stack"
    Condition: ShouldDeployElasticSearch
    DependsOn: ElasticSearchClusterStack
    Properties:
      Parameters:
        DeployCitizenUpdate: !Ref DeployCitizenUpdate
        DeployReporting: !Ref DeployReporting
        LogsToElasticsearch: !GetAtt ElasticSearchClusterStack.Outputs.LogsToElasticsearch
        Prefix: !Ref Prefix
      TemplateURL: !Sub "https://s3.amazonaws.com/${CloudFormationS3Bucket}/es-subscriptions.yml"
